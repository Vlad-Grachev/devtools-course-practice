#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}_can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Print_Help_Without_Arguments
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Print_Help_Without_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "This is a volume 3d figure calculator"
    LABELS "${MODULE}")

#############################################

add_test(
    NAME ${prefix}_Can_Detect_Wrong_Type_Format
    COMMAND ${APPLICATION} 3.22 3.22
)
set_tests_properties (${prefix}_Can_Detect_Wrong_Type_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Type must be integer"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Detect_Wrong_Argument_Format
    COMMAND ${APPLICATION} 1 e
)
set_tests_properties (${prefix}_Can_Detect_Wrong_Argument_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong number format!"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_Can_Detect_Negative_Argument_Format
    COMMAND ${APPLICATION} 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_Can_Detect_Negative_Argument_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong number format!"
    LABELS "${MODULE}")




add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_1
    COMMAND ${APPLICATION} 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_1 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 1 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_2
    COMMAND ${APPLICATION} 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_2 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 1 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_3
    COMMAND ${APPLICATION} 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_3 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 2 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_4
    COMMAND ${APPLICATION} 4 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_4 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 2 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_5
    COMMAND ${APPLICATION} 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_5 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 3 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_6
    COMMAND ${APPLICATION} 6 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_6 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 4 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_7
    COMMAND ${APPLICATION} 7 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_7 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 2 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_8
    COMMAND ${APPLICATION} 8 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_8 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 3 arguments."
    LABELS "${MODULE}")


add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_9
    COMMAND ${APPLICATION} 9 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_9 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 2 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_10
    COMMAND ${APPLICATION} 10 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_10 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 1 arguments."
    LABELS "${MODULE}")


add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_11
    COMMAND ${APPLICATION} 11 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_11 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 3 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_12
    COMMAND ${APPLICATION} 12 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_12 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 2 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_13
    COMMAND ${APPLICATION} 13 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_13 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 3 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_14
    COMMAND ${APPLICATION} 14 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_14 PROPERTIES
    PASS_REGULAR_EXPRESSION "ERROR: Should be 3 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments_Of_Type_14
    COMMAND ${APPLICATION} 18 1 1 1 1 1 1 1 1 1 1 1 1 1 1
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments_Of_Type_14 PROPERTIES
    PASS_REGULAR_EXPRESSION "Incorrect type"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_1
    COMMAND ${APPLICATION} 1 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_1 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 27"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_2
    COMMAND ${APPLICATION} 2 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_2 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 206.904"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_3
    COMMAND ${APPLICATION} 3 3 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_3 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 84.823"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_4
    COMMAND ${APPLICATION} 4 3 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_4 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 9"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_5
    COMMAND ${APPLICATION} 5 3 3 2
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_5 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 18"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_6
    COMMAND ${APPLICATION} 6 3 5 2 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_6 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 4.2336"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_7
    COMMAND ${APPLICATION} 7 3 2
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_7 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 2"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_8
    COMMAND ${APPLICATION} 8 3 2 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_8 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 3"
    LABELS "${MODULE}")


add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_9
    COMMAND ${APPLICATION} 9 3 2
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_9 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 12.5664"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_10
    COMMAND ${APPLICATION} 10 3
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_10 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 84.823"
    LABELS "${MODULE}")


add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_11
    COMMAND ${APPLICATION} 11 3 2 5
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_11 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 94.2478"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_12
    COMMAND ${APPLICATION} 12 3 2
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_12 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 18.8496"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_13
    COMMAND ${APPLICATION} 13 3 2 5
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_13 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 30"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Calculate_Volume_Of_Type_14
    COMMAND ${APPLICATION} 14 3 2 5
)
set_tests_properties (${prefix}_can_Calculate_Volume_Of_Type_14 PROPERTIES
    PASS_REGULAR_EXPRESSION "Volume = 99.4838"
    LABELS "${MODULE}")
